// AUTOGENERATED! DO NOT EDIT.
package {{ service_name }}

import (
	"context"
	"tonky/holistic/domain/food"
	"tonky/holistic/infra/logger"
	"tonky/holistic/infra/postgres"

	"github.com/samber/do/v2"
)

type {{ repo.InterfaceName() }} interface {
    {% for io in repo.Interface %}
    {{ io.Method }}(context.Context{% if io.Arg %}, {{ io.Arg.Typ }}{% end %}) ({% if io.Ret %}{{ io.Ret.Typ }}, {% end %}error)
    {% end %}
}

type {{ repo.StructName() }} struct {
	logger logger.SlogLogger
	client {{ kind }}.Client
}

func New{{ repo.StructName() }}Repository(deps do.Injector) (*{{ repo.StructName() }}, error) {
	return &{{ repo.StructName() }}{
		logger: *do.MustInvoke[*logger.SlogLogger](deps),
		client: *do.MustInvoke[*{{ kind }}.Client](deps),
	}, nil
}
