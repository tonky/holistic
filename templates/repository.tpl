// AUTOGENERATED! DO NOT EDIT.
package {{ service_name }}

import (
	"context"
	"tonky/holistic/domain/food"
	"tonky/holistic/infra/logger"
	"tonky/holistic/infra/{{ infra.Typ }}"

	"github.com/samber/do/v2"
)

type {{ infra.Name}}Repository interface {
    {% for io in infra.InOut %}
    {{ io.Name }}(context.Context{% if io.In %}, {{ io.In.Typ }}{% end %}) ({{ io.Out.Typ}}, error)
    {% end %}
}

type {{ cap(infra.Typ) }}{{ infra.Name }} struct {
	logger logger.SlogLogger
	client {{ infra.Typ }}.Client
}

func New{{ cap(infra.Typ) }}{{ infra.Name }}Repository(deps do.Injector) (*{{ cap(infra.Typ) }}{{ infra.Name }}, error) {
	return &{{ cap(infra.Typ) }}{{ infra.Name }}{
		logger: *do.MustInvoke[*logger.SlogLogger](deps),
		client: *do.MustInvoke[*{{ infra.Typ }}.Client](deps),
	}, nil
}
