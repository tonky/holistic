// AUTOGENERATED! DO NOT EDIT.
package pizzeria

import (
	"context"
	"tonky/holistic/domain/food"
	"tonky/holistic/infra/logger"
	"tonky/holistic/infra/kafka"

	"github.com/samber/do/v2"
)

type {{ kp.InterfaceName() }} interface {
	Produce{{ cap(kp.Name) }}(context.Context, {{ kp.Model }}) error
	Produce{{ cap(kp.Name) }}Batch(context.Context, []{{ kp.Model }}) error
}

type {{ kp.StructName() }} struct {
	logger logger.SlogLogger
	client kafka.IProducer
}

func New{{ kp.StructName() }}(deps do.Injector) (*{{ kp.StructName() }}, error) {
	config := *do.MustInvoke[*kafka.Config](deps)
	client := kafka.NewProducer(config, "{{ kp.Topic }}")

	return &{{ kp.StructName() }}{
		logger: *do.MustInvoke[*logger.SlogLogger](deps),
		client: client,
	}, nil
}
