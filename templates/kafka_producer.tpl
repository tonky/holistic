// AUTOGENERATED! DO NOT EDIT.
package {{ service_name }}

import (
	"context"
	"tonky/holistic/domain/food"
	"tonky/holistic/infra/logger"
	"tonky/holistic/infra/kafkaProducer"
)

type {{ kp.InterfaceName() }} interface {
	Produce{{ cap(kp.Name) }}(context.Context, {{ kp.Model }}) error
	Produce{{ cap(kp.Name) }}Batch(context.Context, []{{ kp.Model }}) error
}

type {{ kp.StructName() }} struct {
	logger logger.Slog
	client kafkaProducer.IProducer
}

func New{{ kp.StructName() }}(logger logger.Slog, config kafkaProducer.Config) (*{{ kp.StructName() }}, error) {
	client := kafkaProducer.NewProducer(config, "{{ kp.Topic }}")

	return &{{ kp.StructName() }}{
		logger: logger,
		client: client,
	}, nil
}
