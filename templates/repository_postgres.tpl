// AUTOGENERATED! DO NOT EDIT.
package {{ service_name }}

import (
	"context"
	"tonky/holistic/domain/food"
	"tonky/holistic/infra/logger"
	"tonky/holistic/infra/postgres"
)

type {{ repo.InterfaceName() }} interface {
    {% for io in repo.Methods %}
    {{ io.Name }}(context.Context{% if io.Arg %}, {{ io.Arg.Typ }}{% end %}) ({% if io.Ret %}{{ io.Ret.Typ }}, {% end %}error)
    {% end %}
}

type {{ repo.StructName() }} struct {
	logger logger.Slog
	client {{ kind }}.Client
}

func New{{ repo.StructName() }}Repository(logger logger.Slog, conf postgres.Config) (*{{ repo.StructName() }}, error) {
	client, err := postgres.NewClient(conf)
	if err != nil {
		return nil, err
	}

	return &{{ repo.StructName() }}{
		logger: logger,
		client: client,
	}, nil
}
