// AUTOGENERATED! DO NOT EDIT.
package pizzeria

import (
	"context"
	"tonky/holistic/domain/food"
	"tonky/holistic/infra/logger"
	"tonky/holistic/infra/kafka"

	"github.com/samber/do/v2"
)

type FoodOrderProducer interface {
	ProduceFoodOrder(context.Context, food.Order) error
	ProduceFoodOrderBatch(context.Context, []food.Order) error
}

type KafkaFoodOrderProducer struct {
	logger logger.SlogLogger
	client kafka.IProducer
}

func NewKafkaFoodOrderProducer(deps do.Injector) (*KafkaFoodOrderProducer, error) {
	config := *do.MustInvoke[*kafka.Config](deps)
	client := kafka.NewProducer(config, "pizzeria.orders")

	return &KafkaFoodOrderProducer{
		logger: *do.MustInvoke[*logger.SlogLogger](deps),
		client: client,
	}, nil
}
