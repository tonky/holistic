// AUTOGENERATED! DO NOT EDIT.
package pizzeria

import (
	"context"
	"tonky/holistic/domain/food"
	"tonky/holistic/infra/logger"
	"tonky/holistic/infra/kafka"

	"github.com/samber/do/v2"
)

type OrderProducerRepository interface {
    ProduceNewOrder(context.Context, food.Order) (error)
}

type KafkaOrderProducer struct {
	logger logger.SlogLogger
	client kafka.Producer
}

func NewKafkaOrderProducerRepository(deps do.Injector) (*KafkaOrderProducer, error) {
	config := *do.MustInvoke[*kafka.Config](deps)
	client := kafka.NewProducer(config, "pizzeria.orders")

	return &KafkaOrderProducer{
		logger: *do.MustInvoke[*logger.SlogLogger](deps),
		client: client,
	}, nil
}
