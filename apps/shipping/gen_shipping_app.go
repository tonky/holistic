// AUTOGENERATED! DO NOT EDIT.

package shipping

import (
	"context"
	"tonky/holistic/infra/kafkaProducer"
	"tonky/holistic/infra/kafkaConsumer"
	"tonky/holistic/infra/logger"
)

type Deps struct {
	Config Config
	Logger logger.ILogger
    OrdererRepo OrdererRepository
    ShippingOrderShippedProducer kafkaProducer.IShippingOrderShipped
    AccountingOrderPaidConsumer kafkaConsumer.IAccountingOrderPaid
}


type App struct {
	Deps		Deps
}

func NewApp(deps Deps) (App, error) {
	app := App{
		Deps:       deps,
	}

	return app, nil
}

func (a App) RunConsumers() {
	a.Deps.Logger.Info(">> shipping.App.RunConsumers()")

	ctx := context.Background()

	go func() {
		for err := range a.Deps.AccountingOrderPaidConsumer.Run(ctx, a.AccountingOrderPaidProcessor) {
			a.Deps.Logger.Warn(err.Error())
		}
	}()
}
