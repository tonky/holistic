// AUTOGENERATED! DO NOT EDIT.
package shipping

import (
	"context"
	"tonky/holistic/infra/logger"
	"tonky/holistic/infra/postgres"
	"tonky/holistic/domain/food"
	"tonky/holistic/domain/shipping"
)

var _ OrdererRepository = new(PostgresOrderer)

type OrdererRepository interface {
    ReadOrderShippingByID(context.Context, food.OrderID) (shipping.Order, error)
    SaveShipping(context.Context, shipping.Order) (shipping.Order, error)
}

type PostgresOrderer struct {
	logger logger.ILogger
	client postgres.Client
}

func NewPostgresOrderer(l logger.ILogger, conf postgres.Config) (*PostgresOrderer, error) {
	client, err := postgres.NewClient(conf)
	if err != nil {
		return nil, err
	}

	return &PostgresOrderer{
		logger: l,
		client: client,
	}, nil
}
